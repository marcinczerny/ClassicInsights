@baseUrl = http://localhost:3001/api

### GET all notes (default parameters)
GET {{baseUrl}}/notes

### GET notes with pagination
GET {{baseUrl}}/notes?page=2&limit=5

### GET notes with sorting
GET {{baseUrl}}/notes?sort=title&order=asc

### GET notes with search term
GET {{baseUrl}}/notes?search=your_search_term

### GET notes filtered by entities (provide comma-separated UUIDs)
GET {{baseUrl}}/notes?entities=uuid1,uuid2

### GET notes with combined parameters
GET {{baseUrl}}/notes?page=1&limit=10&sort=updated_at&order=desc&search=important

###
# @name createNote
POST {{baseUrl}}/notes
Content-Type: application/json

{
    "title": "New Note from HTTP file 2",
    "content": "This is the content of the new note. - to be deleted"
}

###
# @name createNoteWithEntities
POST {{baseUrl}}/notes
Content-Type: application/json

{
    "title": "Note with Entities",
    "content": "This note should be linked to existing entities.",
    "entity_ids": [] 
}

###
# @name createNoteInvalid
POST {{baseUrl}}/notes
Content-Type: application/json

{
    "content": "This note has no title and should fail."
}

###
# @name createDuplicateNote
POST {{baseUrl}}/notes
Content-Type: application/json

{
    "title": "New Note from HTTP file"
}

###

# @name getNotes
GET {{{{baseUrl}}}}/api/notes?page=1&limit=5&sort=title&order=asc

###
# ============================================================================
# NOTE-SPECIFIC ENDPOINTS
# ============================================================================

@noteId = e30c7b7a-9694-46a5-9262-738278044eff
@entityId = 00000000-0000-0000-0000-000000000000
@anotherEntityId = 00000000-0000-0000-0000-000000000001

### GET a single note by ID
# @name getNoteById
GET {{baseUrl}}/notes/{{noteId}}

### PATCH (update) a note by ID
# @name updateNote
PATCH {{baseUrl}}/notes/{{noteId}}
Content-Type: application/json

{
    "title": "Updated Note Title via PATCH",
    "content": "This is the updated content for the note.",
    "entity_ids": ["{{entityId}}", "{{anotherEntityId}}"]
}

### PATCH (update) only the title of a note
# @name updateNoteTitle
PATCH {{baseUrl}}/notes/{{noteId}}
Content-Type: application/json

{
    "title": "Updated Note Title Only"
}

### DELETE a note by ID
# @name deleteNote
DELETE {{baseUrl}}/notes/{{noteId}}

### POST (add) an entity to a note
# @name addEntityToNote
POST {{baseUrl}}/notes/{{noteId}}/entities
Content-Type: application/json

{
    "entity_id": "{{entityId}}"
}

### DELETE an entity from a note
# @name removeEntityFromNote
DELETE {{baseUrl}}/notes/{{noteId}}/entities/{{entityId}}

###
# ============================================================================
# ENTITY MANAGEMENT ENDPOINTS
# ============================================================================

@createdEntityId = 

### GET all entities (default parameters)
# @name getEntities
GET {{baseUrl}}/entities

### GET entities with search and sort
# @name getEntitiesFiltered
GET {{baseUrl}}/entities?search=pla&sort=name&order=asc

### GET entities filtered by type
# @name getEntitiesByType
GET {{baseUrl}}/entities?type=person

### POST (create) a new entity
# @name createEntity
POST {{baseUrl}}/entities
Content-Type: application/json

{
    "name": "Platon",
    "type": "person",
    "description": "Starożytny filozof grecki, uczeń Sokratesa."
}

### POST (create) an invalid entity (missing name)
# @name createEntityInvalid
POST {{baseUrl}}/entities
Content-Type: application/json

{
    "type": "work",
    "description": "This should fail validation."
}

### GET a single entity by ID
# @name getEntityById
GET {{baseUrl}}/entities/{{createdEntityId}}

### PATCH (update) an entity by ID
# @name updateEntity
PATCH {{baseUrl}}/entities/{{createdEntityId}}
Content-Type: application/json

{
    "description": "Uczeń Sokratesa i nauczyciel Arystotelesa."
}

### DELETE an entity by ID
# @name deleteEntity
DELETE {{baseUrl}}/entities/{{createdEntityId}}